{"version":3,"sources":["app.js","configure.js","controller/dataCtrl.js","controller/mainCtrl.js","controller/usersCtrl.js","service/dataSrv.js","service/mainSrv.js","service/usersSrv.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","when","state","url","templateUrl","controller","resolve","authenticate","usersSrv","$state","getUserByAuthId","then","response","data","go","constant","weatherAPI","weatherZipCode","$scope","$http","$timeout","$interval","uiGridConstants","uiGridGroupingConstants","dataSrv","$window","gridApi","selectedArray","gridOptions","enableCellEditOnFocus","enableColumnResizing","enableFiltering","enableGridMenu","infiniteScrollRowsFromEnd","infiniteScrollUp","infiniteScrollDown","enableRowSelection","multiSelect","expandableRowTemplate","expandableRowHeight","exporterCsvFilename","exporterPdfDefaultStyle","fontSize","exporterPdfTableStyle","margin","exporterPdfTableHeaderStyle","bold","italics","color","exporterPdfHeader","text","style","exporterPdfFooter","currentPage","pageCount","toString","exporterPdfCustomFormatter","docDefinition","styles","headerStyle","footerStyle","exporterPdfOrientation","exporterPdfPageSize","exporterPdfMaxGridWidth","expandableRowScope","subGridVariable","clickMeSub","row","removeVisit","entity","visit_id","alert","location","reload","columnDefs","name","displayName","enableCellEdit","width","editableCellTemplate","editDropdownValueLabel","editDropdownOptionsArray","id","gender","onRegisterApi","selection","on","rowSelectionChanged","isSelected","edit","afterCellEdit","rowEntity","colDef","newValue","oldValue","changePatient","receivePatients","getPatients","i","length","receiveVisits","getVisits","subGridOptions","appScopeProvider","subGridScope","changeVisit","cellTemplate","addPatient","addNewPatient","addVisit","addNewVisit","removePatient","toggleFilterRow","core","notifyDataChange","dataChange","COLUMN","mainSrv","getWeather","res","weather","addUser","user","addNewUser","selectArray","changeUsers","receiveUsers","getUsers","type","removeUser","service","method","catch","err"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app', ['ui.router', 'ngTouch', 'ui.grid', 'ui.grid.cellNav', 'ui.grid.edit', 'ui.grid.resizeColumns', 'ui.grid.pinning', 'ui.grid.selection', 'ui.grid.moveColumns', 'ui.grid.exporter', 'ui.grid.importer', 'ui.grid.grouping', 'ui.grid.infiniteScroll', 'ui.grid.expandable'])\n    .config(function($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider.when('', '/');\n\n        $stateProvider\n            .state('home', {\n                url: '/',\n                templateUrl: './views/home.html'\n            })\n            .state('users', {\n                url: '/users',\n                templateUrl: './views/users.html',\n                controller: 'usersCtrl',\n                resolve: {\n                    authenticate: function(usersSrv, $state) {\n                        usersSrv.getUserByAuthId().then(response => {\n                            if (response.data === 'unauthorized') {\n                                $state.go('home')\n                            }\n                            return response.data\n                        })\n                    }\n                }\n            })\n            .state('data', {\n                url: '/data',\n                templateUrl: './views/data.html',\n                controller: 'dataCtrl',\n                resolve: {\n                    authenticate: function(usersSrv, $state) {\n                        usersSrv.getUserByAuthId().then(response => {\n                            if (response.data === 'unauthorized') {\n                                $state.go('home')\n                            }\n                            return response.data\n                        })\n                    }\n                }\n            })\n            .state('contact', {\n                url: '/contact',\n                templateUrl: './views/contact.html'\n            })\n            .state('login', {\n                url: '/login',\n                templateUrl: './views/login.html'\n            })\n    })","angular.module('app').constant('config', {\n    weatherAPI: '3c2c06ffa41e54040d66574f915f49cd',\n    weatherZipCode: 84150\n});","angular.module('app').controller('dataCtrl', function($scope, $http, $timeout, $interval, uiGridConstants, uiGridGroupingConstants, dataSrv, $window, authenticate) {\n\n    var gridApi;\n\n    $scope.selectedArray = []\n\n\n    $scope.gridOptions = {\n        enableCellEditOnFocus: true,\n        enableColumnResizing: true,\n        enableFiltering: true,\n        enableGridMenu: true,\n        infiniteScrollRowsFromEnd: 25,\n        infiniteScrollUp: true,\n        infiniteScrollDown: true,\n        enableRowSelection: true,\n        multiSelect: false,\n        expandableRowTemplate: './views/expandableRow.html',\n        expandableRowHeight: 150,\n        exporterCsvFilename: 'myFile.csv',\n        exporterPdfDefaultStyle: { fontSize: 9 },\n        exporterPdfTableStyle: { margin: [20, 20, 20, 20] },\n        exporterPdfTableHeaderStyle: { fontSize: 10, bold: true, italics: true, color: 'black' },\n        exporterPdfHeader: { text: \"SMD\", style: 'headerStyle' },\n        exporterPdfFooter: function(currentPage, pageCount) {\n            return { text: currentPage.toString() + ' of ' + pageCount.toString(), style: 'footerStyle' };\n        },\n        exporterPdfCustomFormatter: function(docDefinition) {\n            docDefinition.styles.headerStyle = { fontSize: 22, bold: true };\n            docDefinition.styles.footerStyle = { fontSize: 10, bold: true };\n            return docDefinition;\n        },\n        exporterPdfOrientation: 'landscape',\n        exporterPdfPageSize: 'LETTER',\n        exporterPdfMaxGridWidth: 600,\n        expandableRowScope: {\n            subGridVariable: 'subGridScopeVariable',\n            clickMeSub: function(row) {\n                dataSrv.removeVisit(row.entity.visit_id);\n                alert(`Visit #${row.entity.visit_id} deleted`) ? \"\" : location.reload();\n\n            }\n        },\n        columnDefs: [\n            { name: 'id', displayName: 'ID', enableCellEdit: false, width: '5%' },\n            { name: 'firstname', displayName: 'First Name', width: '17%' },\n            { name: 'lastname', displayName: 'Last Name', width: '17%' },\n            { name: 'email', displayName: 'e-mail', width: '20%' },\n            { name: 'phone_num', displayName: 'Phone #', width: '12%' },\n            { name: 'dob', displayName: 'DOB' },\n            {\n                name: 'gender',\n                displayName: 'Gender',\n                editableCellTemplate: 'ui-grid/dropdownEditor',\n                editDropdownValueLabel: 'gender',\n                editDropdownOptionsArray: [\n                    { id: 'M', gender: 'M' },\n                    { id: 'F', gender: 'F' }\n                ]\n            }\n        ],\n        onRegisterApi: function(gridApi) {\n            gridApi = gridApi;\n\n            gridApi.selection.on.rowSelectionChanged($scope, function(row) {\n                if (row.isSelected) {\n                    $scope.selectedArray = [row.entity.id]\n                }\n            })\n\n            gridApi.edit.on.afterCellEdit($scope, function(rowEntity, colDef, newValue, oldValue) {\n                dataSrv.changePatient(rowEntity);\n            })\n\n            $scope.receivePatients = () => {\n                dataSrv.getPatients().then((response) => {\n                    $scope.gridOptions.data = response.data;\n                    for (var i = 0; i < response.data.length; i++) {\n                        $scope.receiveVisits(response.data[i].id, i)\n                    }\n                })\n            }\n            $scope.receivePatients();\n\n\n\n            $scope.receiveVisits = (id, i) => {\n                dataSrv.getVisits(id).then((response) => {\n\n\n                    $scope.gridOptions.data[i].subGridOptions = {\n                        appScopeProvider: $scope.subGridScope,\n                        onRegisterApi: function(gridApi) {\n                            gridApi.edit.on.afterCellEdit($scope, function(rowEntity, colDef, newValue, oldValue) {\n                                dataSrv.changeVisit(rowEntity);\n                            })\n                        },\n                        columnDefs: [\n                            { name: 'Del', cellTemplate: `<button class=\"btn primary\" ng-click=\"grid.appScope.clickMeSub(row)\">Delete</button>`, width: '7%' },\n\n                            { name: 'visit_id', displayName: 'Visit ID', enableCellEdit: false, width: '9%' },\n                            { name: 'date', displayName: 'Date', width: '12%' },\n                            { name: 'area_hurt', displayName: 'Area Hurt', width: '11%' },\n                            { name: 'reason', displayName: 'Reason', width: '10%' },\n                            { name: 'prescription', displayName: 'Prescription', width: '13%' },\n                            { name: 'followup', displayName: 'Follow Up', width: '11%' },\n                            { name: 'notes', displayName: 'Notes' }\n                        ],\n                        data: response.data\n                    };\n                })\n            };\n\n        }\n\n    };\n\n\n    $scope.addPatient = () => {\n        dataSrv.addNewPatient().then((response) => {})\n        $scope.receivePatients();\n    };\n\n    $scope.addVisit = (id) => {\n        dataSrv.addNewVisit(id[0]).then((response) => {})\n        $scope.receivePatients();\n    };\n\n\n    $scope.removePatient = (id) => {\n        dataSrv.removePatient(id[0]).then((response) => {})\n        $scope.receivePatients();\n    };\n\n\n\n\n    $scope.toggleFilterRow = function() {\n        $scope.gridOptions.enableFiltering = !$scope.gridOptions.enableFiltering;\n        gridApi.core.notifyDataChange(uiGridConstants.dataChange.COLUMN);\n    };\n\n\n\n});","angular.module('app').controller('mainCtrl', function($scope, mainSrv) {\n\n    //only have a limited amount of calls//\n\n    mainSrv.getWeather().then((res) => {\n        $scope.weather = res.data;\n    })\n\n})","angular.module('app').controller('usersCtrl', function($scope, $http, $timeout, $interval, uiGridConstants, uiGridGroupingConstants, usersSrv, $state, authenticate) {\n\n\n    $scope.addUser = (user) => {\n        usersSrv.addNewUser(user).then((response) => {\n            if (response.data = []) {\n                $state.go('home')\n            } else {\n                alert('Try again.')\n            }\n        })\n\n    }\n\n\n\n    var gridApi;\n\n    $scope.selectArray = []\n\n    $scope.gridOptions = {\n        enableCellEditOnFocus: true,\n        enableColumnResizing: true,\n        enableFiltering: true,\n        enableGridMenu: true,\n        infiniteScrollRowsFromEnd: 25,\n        infiniteScrollUp: true,\n        infiniteScrollDown: true,\n        enableRowSelection: true,\n        multiSelect: false,\n        onRegisterApi: function(gridApi) {\n            gridApi = gridApi;\n\n            gridApi.selection.on.rowSelectionChanged($scope, function(row) {\n                if (row.isSelected) {\n                    $scope.selectArray = [row.entity.id]\n                }\n            })\n\n            gridApi.edit.on.afterCellEdit($scope, function(rowEntity, colDef, newValue, oldValue) {\n                usersSrv.changeUsers(rowEntity);\n            })\n\n            $scope.receiveUsers = () => {\n                usersSrv.getUsers().then((response) => {\n                    $scope.gridOptions = {\n                        data: response.data,\n                        columnDefs: [\n                            { name: 'id', enableCellEdit: false },\n                            { name: 'username', enableCellEdit: false },\n                            {\n                                name: 'type',\n                                editableCellTemplate: 'ui-grid/dropdownEditor',\n                                editDropdownValueLabel: 'type',\n                                editDropdownOptionsArray: [\n                                    { id: 1, type: 1 },\n                                    { id: 2, type: 2 },\n                                    { id: 3, type: 3 },\n                                    { id: 4, type: 4 }\n                                ]\n                            }\n                        ]\n                    };\n                })\n            }\n            $scope.receiveUsers();\n\n        }\n\n    };\n\n\n\n    $scope.removeUser = (id) => {\n        usersSrv.removeUser(id[0]).then((response) => {})\n        $scope.receiveUsers();\n    };\n\n\n\n\n});","angular.module('app').service('dataSrv', function($http) {\n\n    this.getPatients = () => {\n            return $http({\n                url: '/api/getPatients',\n                method: 'GET'\n            })\n        },\n        this.getVisits = (id) => {\n            return $http({\n                url: `/api/getVisits/${id}`,\n                method: 'GET'\n            })\n        },\n        this.addNewPatient = () => {\n            return $http({\n                url: '/api/addNewPatient',\n                method: 'POST'\n            })\n        },\n        this.addNewVisit = (id) => {\n            return $http({\n                url: `/api/addNewVisit/${id}`,\n                method: 'POST'\n            })\n        },\n        this.changePatient = (rowEntity) => {\n            return $http({\n                url: `/api/updatePatient`,\n                method: 'PUT',\n                data: rowEntity\n            })\n        },\n        this.changeVisit = (rowEntity) => {\n            return $http({\n                url: `/api/updateVisit`,\n                method: 'PUT',\n                data: rowEntity\n            })\n        },\n        this.removePatient = (id) => {\n            return $http({\n                url: `/api/deletePatient/${id}`,\n                method: 'DELETE'\n            })\n        },\n        this.removeVisit = (visit_id) => {\n            // console.log(visit_id)\n            return $http({\n                url: `/api/deleteVisit/${visit_id}`,\n                method: 'DELETE'\n            })\n        }\n})","angular.module('app').service('mainSrv', function($http, config) {\n\n    this.getWeather = () => {\n        return $http({\n            method: 'get',\n            url: `http://api.openweathermap.org/data/2.5/weather?zip=${config.weatherZipCode},us&APPID=${config.weatherAPI}&units=imperial`\n\n        })\n    };\n})","angular.module('app').service('usersSrv', function($http) {\n\n    this.getUsers = () => {\n            return $http({\n                url: '/api/getUsers',\n                method: 'GET'\n            })\n        },\n        this.removeUser = (id) => {\n            return $http({\n                url: `/api/deleteUser/${id}`,\n                method: 'DELETE'\n            })\n        },\n        this.addNewUser = (user) => {\n            return $http({\n                url: '/api/addUser',\n                method: 'POST',\n                data: user\n            })\n        },\n        this.changeUsers = (rowEntity) => {\n            return $http({\n                url: `/api/updateUsers`,\n                method: 'PUT',\n                data: rowEntity\n            })\n        },\n        this.getUserByAuthId = () => {\n            return $http({\n                method: 'GET',\n                url: '/security'\n            }).catch(err => {\n                return err\n            })\n        }\n\n})"]}