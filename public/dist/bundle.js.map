{"version":3,"sources":["app.js","controller/addPatientCtrl.js","controller/contactCtrl.js","controller/dataCtrl.js","controller/mainCtrl.js","controller/usersCtrl.js","service/addPatientSrv.js","service/contactSrv.js","service/dataSrv.js","service/mainSrv.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","when","state","url","templateUrl","controller","$scope","addPatientSrv","submitPatient","patient","addPatient","then","response","alert","$state","go","$http","$timeout","$interval","uiGridConstants","uiGridGroupingConstants","dataSrv","gridApi","gridOptions","enableCellEditOnFocus","enableColumnResizing","enableFiltering","enableGridMenu","infiniteScrollRowsFromEnd","infiniteScrollUp","infiniteScrollDown","onRegisterApi","registeredApi","receivePatients","getPatients","data","toggleFilterRow","core","notifyDataChange","dataChange","COLUMN","callsPending","i","refreshData","myData","start","Date","sec","get","success","forEach","row","id","registered","push","error","timeout","cancel","left","$on","mainSrv","weather","service","method","getWeather","weatherZipCode","weatherAPI","res"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app', ['ui.router', 'ngTouch', 'ui.grid', 'ui.grid.cellNav', 'ui.grid.edit', 'ui.grid.resizeColumns', 'ui.grid.pinning', 'ui.grid.selection', 'ui.grid.moveColumns', 'ui.grid.exporter', 'ui.grid.importer', 'ui.grid.grouping', 'ui.grid.infiniteScroll', 'ui.grid.expandable'])\n    .config(function($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider.when('', '/');\n\n        $stateProvider\n            .state('home', {\n                url: '/',\n                templateUrl: './views/home.html'\n            })\n            .state('users', {\n                url: '/users',\n                templateUrl: './views/users.html'\n            })\n            .state('patient', {\n                url: '/patient',\n                templateUrl: './views/addPatient.html'\n            })\n            .state('data', {\n                url: '/data',\n                templateUrl: './views/data.html',\n                controller: 'dataCtrl'\n            })\n            .state('location', {\n                url: 'location',\n                templateUrl: './views/location.html'\n            })\n    })","angular.module('app').controller('addPatientCtrl', function($scope, addPatientSrv) {\n    $scope.submitPatient = function(patient) {\n        addPatientSrv.addPatient(patient).then((response) => {\n            if (!response) {\n                alert('Try Again')\n            }\n            $state.go('home');\n        })\n    }\n})","","angular.module('app').controller('dataCtrl', function($scope, $http, $timeout, $interval, uiGridConstants, uiGridGroupingConstants, dataSrv) {\n\n    var gridApi;\n\n    $scope.gridOptions = {\n        enableCellEditOnFocus: true,\n        enableColumnResizing: true,\n        enableFiltering: true,\n        enableGridMenu: true,\n        infiniteScrollRowsFromEnd: 25,\n        infiniteScrollUp: true,\n        infiniteScrollDown: true,\n        onRegisterApi: function onRegisterApi(registeredApi) {\n            gridApi = registeredApi;\n        }\n    };\n    $scope.receivePatients = () => {\n        dataSrv.getPatients().then((response) => {\n            $scope.gridOptions.data = response.data;\n        })\n    }\n    $scope.receivePatients();\n\n    $scope.toggleFilterRow = function() {\n        $scope.gridOptions.enableFiltering = !$scope.gridOptions.enableFiltering;\n        gridApi.core.notifyDataChange(uiGridConstants.dataChange.COLUMN);\n    };\n\n    $scope.callsPending = 0;\n\n    var i = 0;\n    $scope.refreshData = function() {\n        $scope.myData = [];\n\n        var start = new Date();\n        var sec = $interval(function() {\n            $scope.callsPending++;\n\n            $http.get('/api/getPatients')\n                .success(function(data) {\n                    $scope.callsPending--;\n\n                    data.forEach(function(row) {\n                        row.id = i;\n                        i++;\n                        row.registered = new Date(row.registered)\n                        $scope.myData.push(row);\n                    });\n                })\n                .error(function() {\n                    $scope.callsPending--\n                });\n        }, 200, 10);\n\n\n        var timeout = $timeout(function() {\n            $interval.cancel(sec);\n            $scope.left = '';\n        }, 2000);\n\n        $scope.$on('$destroy', function() {\n            $timeout.cancel(timeout);\n            $interval.cancel(sec);\n        });\n    };\n\n});","angular.module('app').controller('mainCtrl', function($scope, mainSrv) {\n    $scope.weather = mainSrv.weather\n})","","angular.module('app').service('addPatientSrv', function($http) {\n    this.addPatient = (patient) => {\n        return $http({\n            url: '/api/addPatient',\n            method: 'POST',\n            data: patient\n        })\n    }\n})","","angular.module('app').service('dataSrv', function($http) {\n\n    this.getPatients = () => {\n        return $http({\n            url: '/api/getPatients',\n            method: 'GET'\n        })\n    }\n\n})","angular.module('app').service('mainSrv', function($http) {\n    let getWeather = () => {\n        return $http({\n            method: 'get',\n            url: `api.openweathermap.org/data/2.5/weather?zip=${config.weatherZipCode},us&APPID=${config.weatherAPI}`\n        }).then((res) => {\n            this.weather = res.data;\n        })\n    };\n})"]}