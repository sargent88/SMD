{"version":3,"sources":["app.js","config.js","controller/dataCtrl.js","controller/mainCtrl.js","controller/usersCtrl.js","service/dataSrv.js","service/mainSrv.js","service/usersSrv.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","when","state","url","templateUrl","controller","constant","weatherAPI","weatherZipCode","$scope","$http","$timeout","$interval","uiGridConstants","uiGridGroupingConstants","dataSrv","$window","gridApi","selectedArray","console","log","gridOptions","enableCellEditOnFocus","enableColumnResizing","enableFiltering","enableGridMenu","infiniteScrollRowsFromEnd","infiniteScrollUp","infiniteScrollDown","enableRowSelection","multiSelect","expandableRowTemplate","expandableRowHeight","expandableRowScope","subGridVariable","clickMeSub","row","alert","entity","name","columnDefs","displayName","enableCellEdit","width","editableCellTemplate","editDropdownValueLabel","editDropdownOptionsArray","id","gender","onRegisterApi","selection","on","rowSelectionChanged","isSelected","edit","afterCellEdit","rowEntity","colDef","newValue","oldValue","changePatient","receivePatients","getPatients","then","response","data","i","length","receiveVisits","getVisits","subGridOptions","appScopeProvider","subGridScope","cellTemplate","addPatient","addNewPatient","addVisit","addNewVisit","removePatient","toggleFilterRow","core","notifyDataChange","dataChange","COLUMN","mainSrv","usersSrv","$state","addUser","user","addNewUser","go","changePassword","updatePassword","changeUsername","updateUsername","selectArray","changeUsers","receiveUsers","getUsers","type","removeUser","service","method","changeVisit","removeVisit","visit_id","getWeather"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app', ['ui.router', 'ngTouch', 'ui.grid', 'ui.grid.cellNav', 'ui.grid.edit', 'ui.grid.resizeColumns', 'ui.grid.pinning', 'ui.grid.selection', 'ui.grid.moveColumns', 'ui.grid.exporter', 'ui.grid.importer', 'ui.grid.grouping', 'ui.grid.infiniteScroll', 'ui.grid.expandable'])\n    .config(function($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider.when('', '/');\n\n        $stateProvider\n            .state('home', {\n                url: '/',\n                templateUrl: './views/home.html'\n            })\n            .state('users', {\n                url: '/users',\n                templateUrl: './views/users.html',\n                controller: 'usersCtrl'\n            })\n            .state('data', {\n                url: '/data',\n                templateUrl: './views/data.html',\n                controller: 'dataCtrl'\n            })\n            .state('contact', {\n                url: '/contact',\n                templateUrl: './views/contact.html'\n            })\n            .state('register', {\n                url: '/register',\n                templateUrl: './views/register.html',\n                controller: 'usersCtrl'\n            })\n            .state('login', {\n                url: '/login',\n                templateUrl: './views/login.html'\n            })\n            .state('change-password', {\n                url: '/change-password',\n                templateUrl: './views/changePassword.html',\n                controller: 'usersCtrl'\n            })\n            .state('change-username', {\n                url: '/change-username',\n                templateUrl: './views/changeUsername.html',\n                controller: 'usersCtrl'\n            })\n    })","angular.module('app').constant('config', {\n    weatherAPI: '3c2c06ffa41e54040d66574f915f49cd',\n    weatherZipCode: 84150\n});","angular.module('app').controller('dataCtrl', function($scope, $http, $timeout, $interval, uiGridConstants, uiGridGroupingConstants, dataSrv, $window) {\n\n    var gridApi;\n\n    $scope.selectedArray = []\n        // $scope.selectedSubArray = []\n    console.log($scope.selectedArray)\n\n\n\n    $scope.gridOptions = {\n        enableCellEditOnFocus: true,\n        enableColumnResizing: true,\n        enableFiltering: true,\n        enableGridMenu: true,\n        infiniteScrollRowsFromEnd: 25,\n        infiniteScrollUp: true,\n        infiniteScrollDown: true,\n        enableRowSelection: true,\n        multiSelect: false,\n        expandableRowTemplate: './views/expandableRow.html',\n        expandableRowHeight: 150,\n        expandableRowScope: {\n            subGridVariable: 'subGridScopeVariable',\n            clickMeSub: function(row) { alert('hi ' + row.entity.name); }\n        },\n        columnDefs: [\n            { name: 'id', displayName: 'ID', enableCellEdit: false, width: '5%' },\n            { name: 'firstname', displayName: 'First Name', width: '17%' },\n            { name: 'lastname', displayName: 'Last Name', width: '17%' },\n            { name: 'email', displayName: 'e-mail', width: '20%' },\n            { name: 'phone_num', displayName: 'Phone #', width: '12%' },\n            { name: 'dob', displayName: 'DOB' },\n            {\n                name: 'gender',\n                displayName: 'Gender',\n                editableCellTemplate: 'ui-grid/dropdownEditor',\n                editDropdownValueLabel: 'gender',\n                editDropdownOptionsArray: [\n                    { id: 1, gender: 'male' },\n                    { id: 2, gender: 'female' }\n                ]\n            }\n        ],\n        onRegisterApi: function(gridApi) {\n            // console.log($scope.subGridVariable)\n            gridApi = gridApi;\n\n            gridApi.selection.on.rowSelectionChanged($scope, function(row) {\n                // console.log(\"outter: \", row)\n                if (row.isSelected) {\n                    $scope.selectedArray = [row.entity.id]\n                }\n            })\n\n            gridApi.edit.on.afterCellEdit($scope, function(rowEntity, colDef, newValue, oldValue) {\n                console.log(rowEntity, 'row')\n                console.log(colDef, 'your')\n                console.log(newValue, 'boat')\n                console.log(oldValue, 'ok')\n                dataSrv.changePatient(rowEntity);\n            })\n\n            $scope.receivePatients = () => {\n                dataSrv.getPatients().then((response) => {\n                    $scope.gridOptions.data = response.data;\n                    for (var i = 0; i < response.data.length; i++) {\n                        $scope.receiveVisits(response.data[i].id, i)\n                    }\n                })\n            }\n            $scope.receivePatients();\n\n\n\n            $scope.receiveVisits = (id, i) => {\n                dataSrv.getVisits(id).then((response) => {\n\n\n                    $scope.gridOptions.data[i].subGridOptions = {\n                        appScopeProvider: $scope.subGridScope,\n                        columnDefs: [\n                            { name: 'id', cellTemplate: `<button class=\"btn primary\" ng-click=\"grid.appScope.clickMeSub(row)\">Click Me</button>`, width: '7%' },\n\n                            { name: 'visit_id', displayName: 'Visit ID', enableCellEdit: false, width: '9%' },\n                            { name: 'date', displayName: 'Date', width: '12%' },\n                            { name: 'area_hurt', displayName: 'Area Hurt', width: '11%' },\n                            { name: 'reason', displayName: 'Reason', width: '10%' },\n                            { name: 'prescription', displayName: 'Prescription', width: '13%' },\n                            { name: 'followup', displayName: 'Follow Up', width: '11%' },\n                            { name: 'notes', displayName: 'Notes' }\n                        ],\n                        data: response.data\n                    };\n                })\n            };\n\n            // gridApi.expandable.on.rowExpandedStateChanged($scope, function(row) {\n            //         if (row.isExpanded) {\n            //             row.entity.subGridOptions = {\n            //                 columnDefs: [\n            //                     { name: 'Visit_id' },\n            //                     { name: 'Date' },\n            //                     { name: 'Area_hurt' },\n            //                     { name: 'Reason' },\n            //                     { name: 'Prescription' },\n            //                     { name: 'Followup' },\n            //                     { name: 'Notes' }\n            //                 ]\n            //             }\n\n            //             let data = []\n            //             for (let i = 0; i < $scope.gridOptions.data; i++) {\n            //                 data.push($scope.gridOptions.data[i].subGridOptions.data)\n            //             }\n            //             console.log(data)\n            //             row.entity.subGridOptions.data = data;\n            //             console.log(row.entity.subGridOptions, 'subgrid')\n            //         }\n            //     })\n            // gridApi.expandable.on.rowExpandedStateChanged($scope, function(row) {\n            //     console.log(document.getElementsByClassName(\"'ui-grid-row-selected': row.isSelected\"))\n            //     console.log(row.isSelected)\n            //     console.log(row.entity.subGridOptions)\n            // })\n\n        }\n\n    };\n\n\n\n\n\n    // $scope.receivePatients = () => {\n    //     dataSrv.getPatients().then((response) => {\n    //         $scope.gridOptions.data = response.data;\n    //         for (var i = 0; i < response.data.length; i++) {\n    //             $scope.receiveVisits(response.data[i].id, i)\n    //         }\n    //     })\n    // }\n    // $scope.receivePatients();\n\n    // $scope.receiveVisits = (id, i) => {\n    //     dataSrv.getVisits(id).then((response) => {\n    //         // response.data.map(e => {\n    //         //     e['delete?'] = 'x'\n    //         // })\n    //         $scope.gridOptions.data[i].subGridOptions = {\n    //             data: response.data\n    //         };\n    //     })\n    // };\n\n    // const deleteCell = document.getElementsByClassName('ui-grid-coluiGrid-0093');\n    // const deleteVisitFn = () => {\n    //     alert('This works')\n    // }\n    // console.log(deleteCell)\n    // deleteCell.map(e => {\n    //     e.addEventListener('click', deleteVisitFn)\n    // })\n\n    $scope.addPatient = () => {\n        dataSrv.addNewPatient().then((response) => {})\n        $scope.receivePatients();\n    };\n\n    $scope.addVisit = (id) => {\n        dataSrv.addNewVisit(id[0]).then((response) => {})\n        $scope.receivePatients();\n    };\n\n\n    $scope.removePatient = (id) => {\n        dataSrv.removePatient(id[0]).then((response) => {})\n        $scope.receivePatients();\n    };\n\n\n\n\n    $scope.toggleFilterRow = function() {\n        $scope.gridOptions.enableFiltering = !$scope.gridOptions.enableFiltering;\n        gridApi.core.notifyDataChange(uiGridConstants.dataChange.COLUMN);\n    };\n\n\n\n});","angular.module('app').controller('mainCtrl', function($scope, mainSrv) {\n\n    //only have a limited amount of calls\n    // mainSrv.getWeather().then((res) => {\n    //     $scope.weather = res.data;\n    // })\n\n})","angular.module('app').controller('usersCtrl', function($scope, $http, $timeout, $interval, uiGridConstants, uiGridGroupingConstants, usersSrv, $state) {\n\n\n    $scope.addUser = (user) => {\n        usersSrv.addNewUser(user).then((response) => {\n            if (response.data = []) {\n                $state.go('home')\n            } else {\n                alert('Try again.')\n            }\n        })\n\n    }\n\n    $scope.changePassword = (user) => {\n        usersSrv.updatePassword(user).then((response) => {\n            if (response.data = []) {\n                $state.go('home')\n            } else {\n                alert('Try again.')\n            }\n        })\n    }\n\n    $scope.changeUsername = (user) => {\n        usersSrv.updateUsername(user).then((response) => {\n            if (response.data = []) {\n                $state.go('home')\n            } else {\n                alert('Try again.')\n            }\n        })\n    }\n\n\n    var gridApi;\n\n    $scope.selectArray = []\n    console.log('array: ', $scope.selectArray)\n\n    $scope.gridOptions = {\n        enableCellEditOnFocus: true,\n        enableColumnResizing: true,\n        enableFiltering: true,\n        enableGridMenu: true,\n        infiniteScrollRowsFromEnd: 25,\n        infiniteScrollUp: true,\n        infiniteScrollDown: true,\n        enableRowSelection: true,\n        multiSelect: false,\n        onRegisterApi: function(gridApi) {\n            gridApi = gridApi;\n\n            gridApi.selection.on.rowSelectionChanged($scope, function(row) {\n                if (row.isSelected) {\n                    $scope.selectArray = [row.entity.id]\n                }\n            })\n\n            gridApi.edit.on.afterCellEdit($scope, function(rowEntity, colDef, newValue, oldValue) {\n                usersSrv.changeUsers(rowEntity);\n            })\n\n            $scope.receiveUsers = () => {\n                usersSrv.getUsers().then((response) => {\n                    $scope.gridOptions = {\n                        data: response.data,\n                        columnDefs: [\n                            { name: 'id', enableCellEdit: false },\n                            { name: 'username' },\n                            {\n                                name: 'type',\n                                editableCellTemplate: 'ui-grid/dropdownEditor',\n                                editDropdownValueLabel: 'type',\n                                editDropdownOptionsArray: [\n                                    { id: 1, type: 1 },\n                                    { id: 2, type: 2 },\n                                    { id: 3, type: 3 },\n                                    { id: 4, type: 4 }\n                                ]\n                            }\n                        ]\n                    };\n                })\n            }\n            $scope.receiveUsers();\n\n        }\n\n    };\n\n\n\n\n\n\n    // $scope.addPatient = () => {\n    //     dataSrv.addNewPatient().then((response) => {})\n    //     $scope.receivePatients();\n    // };\n\n\n    $scope.removeUser = (id) => {\n        usersSrv.removeUser(id[0]).then((response) => {})\n        $scope.receiveUsers();\n    };\n\n\n\n\n});","angular.module('app').service('dataSrv', function($http) {\n\n    this.getPatients = () => {\n            return $http({\n                url: '/api/getPatients',\n                method: 'GET'\n            })\n        },\n        this.getVisits = (id) => {\n            return $http({\n                url: `/api/getVisits/${id}`,\n                method: 'GET'\n            })\n        },\n        this.addNewPatient = () => {\n            return $http({\n                url: '/api/addNewPatient',\n                method: 'POST'\n            })\n        },\n        this.addNewVisit = (id) => {\n            return $http({\n                url: `/api/addNewVisit/${id}`,\n                method: 'POST'\n            })\n        },\n        this.changePatient = (rowEntity) => {\n            return $http({\n                url: `/api/updatePatient`,\n                method: 'PUT',\n                data: rowEntity\n            })\n        },\n        this.changeVisit = () => {\n            return $http({\n                url: `/api/updateVisit`,\n                method: 'PUT',\n                // data: \n            })\n        },\n        this.removePatient = (id) => {\n            return $http({\n                url: `/api/deletePatient/${id}`,\n                method: 'DELETE'\n            })\n        },\n        this.removeVisit = (visit_id) => {\n            return $http({\n                url: `/api/deleteVisit/${visit_id}`,\n                method: 'DELETE'\n            })\n        }\n})","angular.module('app').service('mainSrv', function($http, config) {\n\n    this.getWeather = () => {\n        return $http({\n            method: 'get',\n            url: `http://api.openweathermap.org/data/2.5/weather?zip=${config.weatherZipCode},us&APPID=${config.weatherAPI}&units=imperial`\n\n        })\n    };\n})","angular.module('app').service('usersSrv', function($http) {\n\n    this.getUsers = () => {\n            return $http({\n                url: '/api/getUsers',\n                method: 'GET'\n            })\n        },\n        this.removeUser = (id) => {\n            return $http({\n                url: `/api/deleteUser/${id}`,\n                method: 'DELETE'\n            })\n        },\n        this.addNewUser = (user) => {\n            return $http({\n                url: '/api/addUser',\n                method: 'POST',\n                data: user\n            })\n        },\n        this.updatePassword = (user) => {\n            return $http({\n                url: '/api/updatePassword',\n                method: 'PUT',\n                data: user\n            })\n        },\n        this.updateUsername = (user) => {\n            return $http({\n                url: '/api/updateUsername',\n                method: 'PUT',\n                data: user\n            })\n        },\n        this.changeUsers = (rowEntity) => {\n            return $http({\n                url: `/api/updateUsers`,\n                method: 'PUT',\n                data: rowEntity\n            })\n        }\n\n})"]}